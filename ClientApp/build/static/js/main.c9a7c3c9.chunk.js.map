{"version":3,"sources":["components/shared/NavBar/NavBar.jsx","components/shared/Footer/Footer.jsx","components/Layout.jsx","components/shared/SharedTable/SharedTable.jsx","components/shared/DeleteModal/DeleteModal.jsx","components/shared/CreateEditModal/CreateEditModal.jsx","components/shared/SharedPagination/SharedPagination.jsx","components/Stores/Stores.jsx","components/Sales/Sales.jsx","components/Products/Products.jsx","components/Customers/Customers.jsx","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","useState","activeItem","setActiveItem","navMenu","name","to","handleNavClick","Menu","inverted","className","map","Item","key","exact","as","NavLink","active","onClick","Footer","Layout","children","Container","fluid","SharedTable","headers","content","dataColumn","handleEditClick","handleDeleteClick","Table","celled","striped","sortable","Header","Row","header","HeaderCell","text","Body","length","Cell","colSpan","style","textAlign","item","id","ListObject","split","keyObj","key1","value","toString","Button","color","Icon","DeleteModal","type","open","onConfirm","onClose","Modal","size","Content","image","Description","Actions","labelPosition","icon","DynamicFormElements","formElements","element","index","Form","Field","CreateEditModal","mode","handleFormSubmit","errors","Message","negative","Object","keys","positive","noOfItemOptions","SharedPagination","noOfItemsVisible","handleNoOfVisibleItemChange","list","handleActivePageChanged","Grid","columns","Column","Select","onChange","options","Math","ceil","Pagination","boundaryRange","defaultActivePage","firstItem","lastItem","onPageChange","event","data","activePage","totalPages","Stores","props","dispatch","action","state","column","setState","stores","slice","reverse","direction","_","sortBy","Error","handleDataChange","hasOwnProperty","e","createEditModal","deleteStoreModal","deleteStoreId","editStoreId","address","showFirstAndLastNav","showPreviousAndNextNav","this","fetchStores","width","sorted","label","required","control","Input","placeholder","handleNewStore","handleStoreDelete","modalState","primary","fetch","method","then","response","json","request","endpoint","body","JSON","stringify","requestOptions","ok","res","Component","Sales","sales","deleteSaleModal","deleteSaleId","editSaleId","dateSold","customersList","productsList","storesList","customerId","storeId","productId","error","fetchSales","loadLists","DateInput","dateFormat","closable","iconPosition","handleNewSale","handleSaleDelete","editCustomerId","moment","utc","fetchProducts","forEach","format","endpoints","i","prevState","Products","products","deleteProductModal","deleteProductId","editProductId","price","handleNewProduct","handleProductDelete","priceCheck","Number","parseFloat","isNaN","Customers","customers","deleteCustomerModal","deleteCustomerId","fetchCustomers","handleNewCustomer","handleCustomerDelete","App","routes","path","component","route","displayName","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c9a7c3c9.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\nimport \"./NavBar.css\";\n\nconst NavBar = () => {\n  const [activeItem, setActiveItem] = useState(\"/\");\n\n  const navMenu = [\n \n    { name: \"Stores\", to: \"/stores\" },\n    { name: \"Products\", to: \"/products\" },\n    { name: \"Customers\", to: \"/\" },\n    { name: \"Sales\", to: \"/sales\" },\n  ];\n\n  const handleNavClick = ({ name }) => {\n    setActiveItem(name);\n  };\n\n  return (\n    <Fragment>\n      <Menu inverted className=\"menu-bar\">\n        <span>React</span>\n\n        {navMenu &&\n          navMenu.map(({name, to}) => \n            <Menu.Item\n              name={name}\n              key={name}\n              exact\n              as={NavLink}\n              to={to}\n              active={activeItem === name}\n              onClick={handleNavClick}\n            />\n          )}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport \"./Footer.css\";\n\nconst Footer = () => {\n    return (<footer>© 2021 Onboarding Task. All rights reserved</footer>);\n}\n \nexport default Footer;","import React, { Fragment } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./shared/NavBar/NavBar\";\nimport Footer from \"./shared/Footer/Footer\";\n\nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n      <NavBar />\n      <Container fluid className=\"px-2 pb-4\">{children}</Container>\n      <Footer/>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { Fragment } from \"react\";\nimport { Table, Button, Icon } from \"semantic-ui-react\";\n\nconst DynamicCells = (columnStrObject, ListObject) => {\n  \n  const keys = columnStrObject.split(\",\");\n  return keys.map((key) => {\n    const keyObj = key.split(\".\");\n    if(keyObj.length>1) { \n      let [key1, value] = keyObj;\n      return <Table.Cell key={key.toString()}>{ListObject[key1][value]}</Table.Cell>\n    }\n    else { return <Table.Cell key={key.toString()}>{ListObject[key.toString()]}</Table.Cell>}\n  });\n};\n\nconst SharedTable = ({ headers, content, dataColumn, handleEditClick, handleDeleteClick }) => {\n  return (\n    <Fragment>\n      <Table celled striped sortable>\n        <Table.Header>\n          <Table.Row>\n            {headers &&\n              headers.map((header) => (\n                <Table.HeaderCell key={header.text} {...header}>{header.text}</Table.HeaderCell>\n              ))}\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {content && content.length===0 && <Table.Row ><Table.Cell colSpan={headers.length} style={{textAlign:'center'}}>No item in this table.</Table.Cell></Table.Row>}\n          {content &&\n            content.map((item) => (\n              <Table.Row key={item.id}>\n                {DynamicCells(dataColumn, item)}\n                <Table.Cell>\n                <Button color=\"yellow\" onClick={() => handleEditClick(item)}>\n                    <Icon name=\"edit\" />\n                    Edit\n                  </Button>\n                </Table.Cell>\n                <Table.Cell>\n                  <Button color=\"red\" onClick={() => handleDeleteClick(item)}>\n                    <Icon name=\"delete\" />\n                    Delete\n                  </Button>\n                </Table.Cell>\n              </Table.Row>\n            ))}\n        </Table.Body>\n      </Table>\n    </Fragment>\n  );\n};\n\nexport default SharedTable;\n","import React, { Fragment } from \"react\";\nimport { Modal, Button } from \"semantic-ui-react\";\n\nconst DeleteModal = ({ type ,open, onConfirm, onClose, id }) => {\n  return (\n    <Fragment>\n      <Modal onClose={() => onClose(false)} open={open} size=\"tiny\">\n        <Modal.Header>Delete {type}</Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            <p>Are you sure?</p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => onClose(false)}>\n            Nope\n          </Button>\n          <Button\n            content=\"Delete\"\n            labelPosition=\"right\"\n            icon=\"delete\"\n            color=\"red\"\n            onClick={() => onConfirm(id)}\n          />\n        </Modal.Actions>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default DeleteModal;\n","import React, { Fragment } from \"react\";\nimport { Modal, Button, Form, Message } from \"semantic-ui-react\";\n\nconst DynamicFormElements = (formElements) => {\n  return (\n    formElements &&\n    formElements.map((element, index) => (\n      <Form.Field key={index} {...element} />\n    ))\n  );\n};\n\nconst CreateEditModal = ({\n  mode,\n  type,\n  formElements,\n  open,\n  onClose,\n  handleFormSubmit,\n  errors,\n}) => {\n  return (\n    <Fragment>\n      <Modal onClose={() => onClose(false)} open={open} size=\"tiny\">\n        <Modal.Header>\n          {mode === \"create\" ? \"Create\" : \"Edit\"} {type}\n        </Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            {errors &&  <Message negative>\n              {Object.keys(errors).map((key,index) =>{\n                return <p key={key}>{errors[key]}</p>\n              })}\n            </Message>\n            \n            }\n            <Form>\n              {DynamicFormElements && DynamicFormElements(formElements)}\n            </Form>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => onClose(false)}>\n            Nope\n          </Button>\n          <Button\n            content={mode === \"create\" ? \"Create\" : \"Update\"}\n            labelPosition=\"right\"\n            icon=\"checkmark\"\n            positive\n            type=\"submit\"\n            onClick={() => handleFormSubmit(mode)}\n          />\n        </Modal.Actions>\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default CreateEditModal;\n","import React from 'react';\nimport {  Grid, Select, Pagination } from \"semantic-ui-react\";\n\nconst noOfItemOptions = [\n    {\n      key: 0,\n      text: \"5 items\",\n      value: 5,\n    },\n    {\n      key: 1,\n      text: \"10 items\",\n      value: 10,\n    },\n    {\n      key: 2,\n      text: \"25 items\",\n      value: 25,\n    },\n  ];\n\nconst SharedPagination = ({noOfItemsVisible, handleNoOfVisibleItemChange,  list, handleActivePageChanged }) => {\n    return (<Grid columns=\"2\">\n    <Grid.Row>\n      <Grid.Column>\n        <Select\n          name=\"noOfItemsVisible\"\n          value={noOfItemsVisible}\n          onChange={handleNoOfVisibleItemChange}\n          options={noOfItemOptions}\n        />\n      </Grid.Column>\n      <Grid.Column className=\"text-right\">\n        {Math.ceil(list.length / noOfItemsVisible) > 1 && (\n          <Pagination\n            boundaryRange={0}\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            onPageChange={(event, data) =>\n              handleActivePageChanged(event, data.activePage)\n            }\n            totalPages={Math.ceil(list.length / noOfItemsVisible)}\n          />\n        )}\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>);\n}\n \nexport default SharedPagination;","import React, { Fragment, Component } from \"react\";\nimport { Button, Input } from \"semantic-ui-react\";\nimport SharedTable from \"../shared/SharedTable/SharedTable\";\nimport _ from \"lodash\";\nimport DeleteModal from \"../shared/DeleteModal/DeleteModal\";\nimport CreateEditModal from \"../shared/CreateEditModal/CreateEditModal\";\nimport SharedPagination from \"../shared/SharedPagination/SharedPagination\";\n\nclass Stores extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [],\n      createEditModal: false,\n      deleteStoreModal: false,\n      deleteStoreId: \"\",\n      editStoreId: \"\",\n      mode: \"\",\n      name: \"\",\n      address: \"\",\n      errors: \"\",\n      column: null,\n      direction: null,\n      activePage: 0,\n      noOfItemsVisible: 5,\n      showFirstAndLastNav: true,\n      showPreviousAndNextNav: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStores();\n  }\n\n  dispatch = (action) => {\n    switch (action.type) {\n      case \"CHANGE_SORT\":\n        if (this.state.column === action.column) {\n          return this.setState({\n            ...this.state,\n            stores: this.state.stores.slice().reverse(),\n            direction:\n              this.state.direction === \"ascending\" ? \"descending\" : \"ascending\",\n          });\n        }\n        return this.setState({\n          column: action.column,\n          stores: _.sortBy(this.state.stores, [action.column]),\n          direction: \"ascending\",\n        });\n      default:\n        throw new Error();\n    }\n  };\n\n  handleDataChange = (event, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  };\n\n  handleActivePageChanged = (event, activePage) => {\n    this.setState({\n      activePage: activePage - 1,\n    });\n  };\n\n  handleNoOfVisibleItemChange = (e, { name, value }) => {\n    this.setState({ noOfItemsVisible: value });\n  };\n\n  render() {\n    const {\n      stores,\n      mode,\n      name,\n      address,\n      noOfItemsVisible,\n      activePage,\n      errors,\n    } = this.state;\n\n    const headers = [\n      {\n        text: \"Name\",\n        width: \"6\",\n        sorted: this.state.column === \"name\" ? this.state.direction : null,\n        onClick: () => this.dispatch({ type: \"CHANGE_SORT\", column: \"name\" }),\n      },\n      {\n        text: \"Address\",\n        width: \"6\",\n        sorted: this.state.column === \"address\" ? this.state.direction : null,\n        onClick: () =>\n          this.dispatch({ type: \"CHANGE_SORT\", column: \"address\" }),\n      },\n      {\n        text: \"Actions\",\n        width: \"2\",\n      },\n      {\n        text: \"Actoins\",\n        width: \"2\",\n      },\n    ];\n\n    const dataColumn = \"name,address\";\n\n    const formElements = [\n      {\n        name: \"name\",\n        label: \"Store Name\",\n        required: true,\n        value: name,\n        control: Input,\n        placeholder: \"Enter store name\",\n        onChange: this.handleDataChange,\n      },\n      {\n        name: \"address\",\n        label: \"Store Address\",\n        required: true,\n        control: Input,\n        value: address,\n        placeholder: \"Enter store address\",\n        onChange: this.handleDataChange,\n      },\n    ];\n\n    const handleEditClick = (item) => {\n      this.setState({\n        mode: \"edit\",\n        name: item.name,\n        address: item.address,\n        editStoreId: item.id,\n        createEditModal: true,\n      });\n    };\n\n    const handleNewStore = (value) => {\n      this.setState({\n        mode: \"create\",\n        createEditModal: value,\n      });\n    };\n\n    const handleDeleteClick = (item) => {\n      handleStoreDelete(true, item.id);\n    };\n\n    const handleStoreDelete = (modalState, id) => {\n      this.setState({\n        deleteStoreModal: modalState,\n        deleteStoreId: id,\n      });\n    };\n\n    const handleFormSubmit = (mode) => {\n      const request = {};\n\n      if (mode === \"create\") {\n        request.method = \"POST\";\n        request.endpoint = \"stores/poststore\";\n        request.body = JSON.stringify({\n          name: this.state.name,\n          address: this.state.address,\n        });\n      } else if (mode === \"edit\") {\n        request.method = \"PUT\";\n        request.endpoint = `stores/putstore/${this.state.editStoreId}`;\n        request.body = JSON.stringify({\n          id: this.state.editStoreId,\n          name: this.state.name,\n          address: this.state.address,\n        });\n      }\n\n      const requestOptions = {\n        method: request.method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: request.body,\n      };\n\n      fetch(request.endpoint, requestOptions).then((response) => {\n        if (!response.ok) {\n          response\n            .json()\n            .then((data) => this.setState({ errors: data.errors }));\n        } else {\n          this.fetchStores();\n          this.setState({ createEditModal: false });\n        }\n      });\n    };\n\n    const handleConfirmDelete = (id) => {\n      const requestOptions = {\n        method: \"Delete\",\n      };\n      fetch(`stores/deletestore/${id}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          this.fetchStores();\n          this.setState({ deleteStoreModal: false });\n        });\n    };\n\n    return (\n      <Fragment>\n        <Button primary onClick={() => handleNewStore(true)}>\n          New Store\n        </Button>\n\n        <SharedTable\n          headers={headers}\n          content={stores.slice(\n            activePage * noOfItemsVisible,\n            (activePage + 1) * noOfItemsVisible\n          )}\n          dataColumn={dataColumn}\n          handleEditClick={handleEditClick}\n          handleDeleteClick={handleDeleteClick}\n        />\n\n        <DeleteModal\n          open={this.state.deleteStoreModal}\n          onClose={handleStoreDelete}\n          type=\"Store\"\n          onConfirm={handleConfirmDelete}\n          id={this.state.deleteStoreId}\n        />\n        <CreateEditModal\n          mode={mode}\n          type=\"Store\"\n          formElements={formElements}\n          open={this.state.createEditModal}\n          onClose={handleNewStore}\n          handleFormSubmit={handleFormSubmit}\n          errors={errors}\n        />\n\n        <SharedPagination\n          noOfItemsVisible={this.state.noOfItemsVisible}\n          list={stores}\n          handleActivePageChanged={this.handleActivePageChanged}\n          handleNoOfVisibleItemChange={this.handleNoOfVisibleItemChange}\n        />\n      </Fragment>\n    );\n  }\n\n  async fetchStores() {\n    await fetch(\"stores/getstore\")\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          stores: data,\n        })\n      );\n  }\n}\n\nexport default Stores;\n","import React, { Fragment, Component } from \"react\";\nimport { Button, Select } from \"semantic-ui-react\";\nimport SharedTable from \"../shared/SharedTable/SharedTable\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { DateInput } from \"semantic-ui-calendar-react\";\n\nimport DeleteModal from \"../shared/DeleteModal/DeleteModal\";\nimport CreateEditModal from \"../shared/CreateEditModal/CreateEditModal\";\nimport SharedPagination from \"../shared/SharedPagination/SharedPagination\";\n\nclass Sales extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sales: [],\n      createEditModal: false,\n      deleteSaleModal: false,\n      deleteSaleId: \"\",\n      editSaleId: \"\",\n      mode: \"\",\n      dateSold: \"\",\n      customersList: [],\n      productsList: [],\n      storesList: [],\n      customerId: \"\",\n      storeId: \"\",\n      productId: \"\",\n      error: false,\n      column: null,\n      direction: null,\n      activePage: 0,\n      noOfItemsVisible: 5,\n      showFirstAndLastNav: true,\n      showPreviousAndNextNav: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSales();\n    this.loadLists();\n  }\n\n  dispatch = (action) => {\n    switch (action.type) {\n      case \"CHANGE_SORT\":\n        if (this.state.column === action.column) {\n          return this.setState({\n            ...this.state,\n            sales: this.state.sales.slice().reverse(),\n            direction:\n              this.state.direction === \"ascending\" ? \"descending\" : \"ascending\",\n          });\n        }\n        return this.setState({\n          column: action.column,\n          sales: _.sortBy(this.state.sales, [action.column]),\n          direction: \"ascending\",\n        });\n      default:\n        throw new Error();\n    }\n  };\n\n  handleDataChange = (e, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  };\n\n  handleActivePageChanged = (event, activePage) => {\n    this.setState({\n      activePage: activePage - 1,\n    });\n  };\n\n  handleNoOfVisibleItemChange = (e, { name, value }) => {\n    this.setState({ noOfItemsVisible: value });\n  };\n\n  render() {\n    const {\n      sales,\n      mode,\n      dateSold,\n      customersList,\n      productsList,\n      storesList,\n      noOfItemsVisible,\n      activePage,\n    } = this.state;\n\n    const headers = [\n      {\n        text: \"Customer\",\n        width: \"3\",\n        sorted:\n          this.state.column === \"customer.name\" ? this.state.direction : null,\n        onClick: () =>\n          this.dispatch({ type: \"CHANGE_SORT\", column: \"customer.name\" }),\n      },\n      {\n        text: \"Product\",\n        width: \"3\",\n        sorted:\n          this.state.column === \"product.name\" ? this.state.direction : null,\n        onClick: () =>\n          this.dispatch({ type: \"CHANGE_SORT\", column: \"product.name\" }),\n      },\n      {\n        text: \"Store\",\n        width: \"3\",\n        sorted:\n          this.state.column === \"store.name\" ? this.state.direction : null,\n        onClick: () =>\n          this.dispatch({ type: \"CHANGE_SORT\", column: \"store.name\" }),\n      },\n      {\n        text: \"Date Sold\",\n        width: \"3\",\n        sorted: this.state.column === \"dateSold\" ? this.state.direction : null,\n        onClick: () =>\n          this.dispatch({ type: \"CHANGE_SORT\", column: \"dateSold\" }),\n      },\n\n      {\n        text: \"Actions\",\n        width: \"2\",\n      },\n      {\n        text: \"Actoins\",\n        width: \"2\",\n      },\n    ];\n\n    const dataColumn = \"customer.name,product.name,store.name,dateSold\";\n\n    const formElements = [\n      {\n        label: \"Date Sold\",\n        control: DateInput,\n        name: \"dateSold\",\n        id: \"dateSold\",\n        placeholder: \"Date Sold\",\n        dateFormat: \"MMM-DD-YYYY\",\n        closable: true,\n        value: dateSold,\n        iconPosition: \"left\",\n        onChange: this.handleDataChange,\n      },\n      {\n        control: Select,\n        label: \"Customer\",\n        name: \"customerId\",\n        options: customersList,\n        placeholder: \"Select Customer\",\n        onChange: this.handleDataChange,\n      },\n      {\n        control: Select,\n        label: \"Product\",\n        name: \"productId\",\n        options: productsList,\n        placeholder: \"Select Product\",\n        onChange: this.handleDataChange,\n      },\n      {\n        control: Select,\n        label: \"Store\",\n        name: \"storeId\",\n        options: storesList,\n        placeholder: \"Select Store\",\n        onChange: this.handleDataChange,\n      },\n    ];\n\n    const handleEditClick = (item) => {\n      this.setState({\n        mode: \"edit\",\n        name: item.name,\n        address: item.address,\n        editSaleId: item.id,\n        createEditModal: true,\n      });\n    };\n\n    const handleNewSale = (value) => {\n      this.setState({\n        mode: \"create\",\n        createEditModal: value,\n      });\n    };\n\n    const handleDeleteClick = (item) => {\n      handleSaleDelete(true, item.id);\n    };\n\n    const handleSaleDelete = (modalState, id) => {\n      this.setState({\n        deleteSaleModal: modalState,\n        deleteSaleId: id,\n      });\n    };\n\n    const handleFormSubmit = (mode) => {\n      const request = {};\n      const id = this.state.editCustomerId;\n      if (mode === \"create\") {\n        request.method = \"POST\";\n        request.endpoint = \"sales/postsales\";\n        request.body = JSON.stringify({\n          dateSold: moment.utc(this.state.dateSold),\n          customerId: this.state.customerId,\n          storeId: this.state.storeId,\n          productId: this.state.productId,\n        });\n      } else if (mode === \"edit\") {\n        request.method = \"PUT\";\n        request.endpoint = `sales/putsales/${id}`;\n        request.body = JSON.stringify({\n          id: id,\n          dateSold: moment.utc(this.state.dateSold),\n          customerId: this.state.customerId,\n          storeId: this.state.storeId,\n          productId: this.state.productId,\n        });\n      }\n\n      const requestOptions = {\n        method: request.method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: request.body,\n      };\n\n      fetch(request.endpoint, requestOptions).then((response) => {\n        if (!response.ok) {\n          response\n            .json()\n            .then((data) => this.setState({ errors: data.errors }));\n        } else {\n          this.fetchProducts();\n          this.setState({ createEditModal: false });\n        }\n      });\n    };\n\n    const handleConfirmDelete = (id) => {\n      const requestOptions = {\n        method: \"Delete\",\n      };\n      fetch(`sales/deletesales/${id}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          this.fetchSales();\n          this.setState({ deleteSaleModal: false });\n        });\n    };\n\n    return (\n      <Fragment>\n        <Button primary onClick={() => handleNewSale(true)}>\n          New Sale\n        </Button>\n\n        <SharedTable\n          headers={headers}\n          content={sales.slice(\n            activePage * noOfItemsVisible,\n            (activePage + 1) * noOfItemsVisible\n          )}\n          dataColumn={dataColumn}\n          handleEditClick={handleEditClick}\n          handleDeleteClick={handleDeleteClick}\n        />\n\n        <DeleteModal\n          open={this.state.deleteSaleModal}\n          onClose={handleSaleDelete}\n          type=\"Sale\"\n          onConfirm={handleConfirmDelete}\n          id={this.state.deleteSaleId}\n        />\n        <CreateEditModal\n          mode={mode}\n          type=\"Sale\"\n          formElements={formElements}\n          open={this.state.createEditModal}\n          onClose={handleNewSale}\n          handleFormSubmit={handleFormSubmit}\n          error={this.state.error}\n        />\n\n        <SharedPagination\n          noOfItemsVisible={this.state.noOfItemsVisible}\n          list={sales}\n          handleActivePageChanged={this.handleActivePageChanged}\n          handleNoOfVisibleItemChange={this.handleNoOfVisibleItemChange}\n        />\n      </Fragment>\n    );\n  }\n\n  async fetchSales() {\n    await fetch(\"sales/getsales\")\n      .then((res) => res.json())\n      .then((data) => {\n        data.forEach((item) => {\n          item.dateSold = moment.utc(item.dateSold).format(\"MMM-DD-YYYY\");\n        });\n        this.setState({\n          sales: data,\n        });\n      });\n  }\n\n  loadLists() {\n    const endpoints = {\n      customers: \"customers/getcustomer\",\n      stores: \"stores/getstore\",\n      products: \"products/getproduct\",\n    };\n    fetch(endpoints.customers)\n      .then((res) => res.json())\n      .then((data) => {\n        data.forEach((i) => {\n          this.setState((prevState) => ({\n            customersList: [\n              ...prevState.customersList,\n              { key: i.id, text: i.name, value: i.id },\n            ],\n          }));\n        });\n      });\n    fetch(endpoints.products)\n      .then((res) => res.json())\n      .then((data) => {\n        data.forEach((i) => {\n          this.setState((prevState) => ({\n            productsList: [\n              ...prevState.productsList,\n              { key: i.id, text: i.name, value: i.id },\n            ],\n          }));\n        });\n      });\n    fetch(endpoints.stores)\n      .then((res) => res.json())\n      .then((data) => {\n        data.forEach((i) => {\n          this.setState((prevState) => ({\n            storesList: [\n              ...prevState.storesList,\n              { key: i.id, text: i.name, value: i.id },\n            ],\n          }));\n        });\n      });\n  }\n}\n\nexport default Sales;\n","import React, { Fragment, Component } from \"react\";\nimport { Button, Input } from \"semantic-ui-react\";\nimport SharedTable from \"../shared/SharedTable/SharedTable\";\nimport _ from \"lodash\";\nimport DeleteModal from \"../shared/DeleteModal/DeleteModal\";\nimport CreateEditModal from \"../shared/CreateEditModal/CreateEditModal\";\nimport SharedPagination from \"../shared/SharedPagination/SharedPagination\";\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      createEditModal: false,\n      deleteProductModal: false,\n      deleteProductId: \"\",\n      editProductId: \"\",\n      mode: \"\",\n      name: \"\",\n      price: 0,\n      errors: false,\n      column: null,\n      direction: null,\n      activePage: 0,\n      noOfItemsVisible: 5,\n      showFirstAndLastNav: true,\n      showPreviousAndNextNav: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  dispatch = (action) => {\n    switch (action.type) {\n      case \"CHANGE_SORT\":\n        if (this.state.column === action.column) {\n          return this.setState({\n            ...this.state,\n            products: this.state.products.slice().reverse(),\n            direction:\n              this.state.direction === \"ascending\" ? \"descending\" : \"ascending\",\n          });\n        }\n        return this.setState({\n          column: action.column,\n          products: _.sortBy(this.state.products, [action.column]),\n          direction: \"ascending\",\n        });\n      default:\n        throw new Error();\n    }\n  };\n\n  handleDataChange = (event, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  };\n\n  handleActivePageChanged = (event, activePage) => {\n    this.setState({\n      activePage: activePage - 1,\n    });\n  };\n\n  handleNoOfVisibleItemChange = (e, { name, value }) => {\n    this.setState({ noOfItemsVisible: value });\n  };\n\n  render() {\n    const { products, mode, name, price, noOfItemsVisible, activePage } =\n      this.state;\n\n    const headers = [\n      {\n        text: \"Name\",\n        width: \"6\",\n        sorted: this.state.column === \"name\" ? this.state.direction : null,\n        onClick: () => this.dispatch({ type: \"CHANGE_SORT\", column: \"name\" }),\n      },\n      {\n        text: \"Price\",\n        width: \"6\",\n        sorted: this.state.column === \"price\" ? this.state.direction : null,\n        onClick: () => this.dispatch({ type: \"CHANGE_SORT\", column: \"price\" }),\n      },\n      {\n        text: \"Actions\",\n        width: \"2\",\n      },\n      {\n        text: \"Actoins\",\n        width: \"2\",\n      },\n    ];\n\n    const dataColumn = \"name,price\";\n\n    const formElements = [\n      {\n        name: \"name\",\n        label: \"Name\",\n        required: true,\n        control: Input,\n        value: name,\n        placeholder: \"Enter product name\",\n        onChange: this.handleDataChange,\n      },\n      {\n        name: \"price\",\n        label: \"Price\",\n        required: true,\n        control: Input,\n        value: price,\n        placeholder: \"Enter product price\",\n        onChange: this.handleDataChange,\n      },\n    ];\n\n    const handleEditClick = (item) => {\n      this.setState({\n        mode: \"edit\",\n        name: item.name,\n        price: item.price,\n        editProductId: item.id,\n        createEditModal: true,\n      });\n    };\n\n    const handleNewProduct = (value) => {\n      this.setState({\n        mode: \"create\",\n        createEditModal: value,\n      });\n    };\n\n    const handleDeleteClick = (item) => {\n      handleProductDelete(true, item.id);\n    };\n\n    const handleProductDelete = (modalState, id) => {\n      this.setState({\n        deleteProductModal: modalState,\n        deleteProductId: id,\n      });\n    };\n\n    const handleFormSubmit = (mode) => {\n      const request = {};\n\n      if (mode === \"create\") {\n        request.method = \"POST\";\n        request.endpoint = \"products/postproduct\";\n        debugger;\n        const priceCheck = Number.parseFloat(this.state.price);\n        if(isNaN(priceCheck)) {\n          this.setState({ errors: ['Price can only be integer type'] })\n          return false;\n        }\n        request.body = JSON.stringify({\n          name: this.state.name,\n          price: Number.parseFloat(this.state.price),\n        });\n      } else if (mode === \"edit\") {\n        request.method = \"PUT\";\n        request.endpoint = `products/putproduct/${this.state.editProductId}`;\n        request.body = JSON.stringify({\n          id: this.state.editProductId,\n          name: this.state.name,\n          price: Number.parseFloat(this.state.price),\n        });\n      }\n\n      const requestOptions = {\n        method: request.method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: request.body,\n      };\n\n      fetch(request.endpoint, requestOptions).then((response) => {\n        if (!response.ok) {\n          response\n            .json()\n            .then((data) => this.setState({ errors: data.errors }));\n        } else {\n          this.fetchProducts();\n          this.setState({ createEditModal: false });\n        }\n      });\n    };\n\n    const handleConfirmDelete = (id) => {\n      const requestOptions = {\n        method: \"Delete\",\n      };\n      fetch(`products/deleteproduct/${id}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          this.fetchProducts();\n          this.setState({ deleteProductModal: false });\n        });\n    };\n\n    return (\n      <Fragment>\n        <Button primary onClick={() => handleNewProduct(true)}>\n          New Product\n        </Button>\n\n        <SharedTable\n          headers={headers}\n          content={products.slice(\n            activePage * noOfItemsVisible,\n            (activePage + 1) * noOfItemsVisible\n          )}\n          dataColumn={dataColumn}\n          handleEditClick={handleEditClick}\n          handleDeleteClick={handleDeleteClick}\n        />\n\n        <DeleteModal\n          open={this.state.deleteProductModal}\n          onClose={handleProductDelete}\n          type=\"Product\"\n          onConfirm={handleConfirmDelete}\n          id={this.state.deleteProductId}\n        />\n        <CreateEditModal\n          mode={mode}\n          type=\"Product\"\n          formElements={formElements}\n          open={this.state.createEditModal}\n          onClose={handleNewProduct}\n          handleFormSubmit={handleFormSubmit}\n          errors={this.state.errors}\n        />\n\n        <SharedPagination\n          noOfItemsVisible={this.state.noOfItemsVisible}\n          list={products}\n          handleActivePageChanged={this.handleActivePageChanged}\n          handleNoOfVisibleItemChange={this.handleNoOfVisibleItemChange}\n        />\n      </Fragment>\n    );\n  }\n\n  async fetchProducts() {\n    await fetch(\"products/getproduct\")\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          products: data,\n        })\n      );\n  }\n}\n\nexport default Products;\n","import React, { Fragment, Component } from \"react\";\nimport { Button, Input } from \"semantic-ui-react\";\nimport SharedTable from \"../shared/SharedTable/SharedTable\";\nimport _ from \"lodash\";\nimport DeleteModal from \"../shared/DeleteModal/DeleteModal\";\nimport CreateEditModal from \"../shared/CreateEditModal/CreateEditModal\";\nimport SharedPagination from \"../shared/SharedPagination/SharedPagination\";\n\nclass Customers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: [],\n      createEditModal: false,\n      deleteCustomerModal: false,\n      deleteCustomerId: \"\",\n      editCustomerId: \"\",\n      mode: \"\",\n      name: \"\",\n      address: \"\",\n      error: false,\n      column: null,\n      direction: null,\n      activePage: 0,\n      noOfItemsVisible: 5,\n      showFirstAndLastNav: true,\n      showPreviousAndNextNav: true,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCustomers();\n  }\n\n  dispatch = (action) => {\n    switch (action.type) {\n      case \"CHANGE_SORT\":\n        if (this.state.column === action.column) {\n          return this.setState({\n            ...this.state,\n            customers: this.state.customers.slice().reverse(),\n            direction:\n              this.state.direction === \"ascending\" ? \"descending\" : \"ascending\",\n          });\n        }\n        return this.setState({\n          column: action.column,\n          customers: _.sortBy(this.state.customers, [action.column]),\n          direction: \"ascending\",\n        });\n      default:\n        throw new Error();\n    }\n  };\n\n  handleDataChange = (event, { name, value }) => {\n    if (this.state.hasOwnProperty(name)) {\n      this.setState({ [name]: value });\n    }\n  };\n\n  handleActivePageChanged = (event, activePage) => {\n    this.setState({\n      activePage: activePage - 1,\n    });\n  };\n\n  handleNoOfVisibleItemChange = (e, { name, value }) => {\n    this.setState({ noOfItemsVisible: value });\n  };\n\n  render() {\n    const { customers, mode, name, address, noOfItemsVisible, activePage } =\n      this.state;\n\n    const headers = [\n      {\n        text: \"Name\",\n        width: \"6\",\n        sorted: this.state.column === \"name\" ? this.state.direction : null,\n        onClick: () => this.dispatch({ type: \"CHANGE_SORT\", column: \"name\" }),\n      },\n      {\n        text: \"Address\",\n        width: \"6\",\n        sorted: this.state.column === \"address\" ? this.state.direction : null,\n        onClick: () =>\n          this.dispatch({ type: \"CHANGE_SORT\", column: \"address\" }),\n      },\n      {\n        text: \"Actions\",\n        width: \"2\",\n      },\n      {\n        text: \"Actoins\",\n        width: \"2\",\n      },\n    ];\n\n    const dataColumn = \"name,address\";\n\n    const formElements = [\n      {\n        name: \"name\",\n        label: \"Name\",\n        control: Input,\n        required: true,\n        value: name,\n        placeholder: \"Enter customer name\",\n        onChange: this.handleDataChange,\n      },\n      {\n        name: \"address\",\n        label: \"Address\",\n        control: Input,\n        required: true,\n        value: address,\n        placeholder: \"Enter customer address\",\n        onChange: this.handleDataChange,\n      },\n    ];\n\n    const handleEditClick = (item) => {\n      this.setState({\n        mode: \"edit\",\n        name: item.name,\n        address: item.address,\n        editCustomerId: item.id,\n        createEditModal: true,\n      });\n    };\n\n    const handleNewCustomer = (value) => {\n      this.setState({\n        mode: \"create\",\n        createEditModal: value,\n      });\n    };\n\n    const handleDeleteClick = (item) => {\n      handleCustomerDelete(true, item.id);\n    };\n\n    const handleCustomerDelete = (modalState, id) => {\n      this.setState({\n        deleteCustomerModal: modalState,\n        deleteCustomerId: id,\n      });\n    };\n\n    const handleFormSubmit = (mode) => {\n      const request = {};\n\n      if (mode === \"create\") {\n        request.method = \"POST\";\n        request.endpoint = \"customers/postcustomer\";\n        request.body = JSON.stringify({\n          name: this.state.name,\n          address: this.state.address,\n        });\n      } else if (mode === \"edit\") {\n        request.method = \"PUT\";\n        request.endpoint = `customers/putcustomer/${this.state.editCustomerId}`;\n        request.body = JSON.stringify({\n          id: this.state.editCustomerId,\n          name: this.state.name,\n          address: this.state.address,\n        });\n      }\n\n      const requestOptions = {\n        method: request.method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: request.body,\n      };\n\n      fetch(request.endpoint, requestOptions).then((response) => {\n        if (!response.ok) {\n          response\n            .json()\n            .then((data) => this.setState({ errors: data.errors }));\n        } else {\n          this.fetchCustomers();\n          this.setState({ createEditModal: false });\n        }\n      });\n    };\n\n    const handleConfirmDelete = (id) => {\n      const requestOptions = {\n        method: \"Delete\",\n      };\n      fetch(`customers/deletecustomer/${id}`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          this.fetchCustomers();\n          this.setState({ deleteCustomerModal: false });\n        });\n    };\n\n    return (\n      <Fragment>\n        <Button primary onClick={() => handleNewCustomer(true)}>\n          New Customer\n        </Button>\n\n        <SharedTable\n          headers={headers}\n          content={customers.slice(\n            activePage * noOfItemsVisible,\n            (activePage + 1) * noOfItemsVisible\n          )}\n          dataColumn={dataColumn}\n          handleEditClick={handleEditClick}\n          handleDeleteClick={handleDeleteClick}\n        />\n\n        <DeleteModal\n          open={this.state.deleteCustomerModal}\n          onClose={handleCustomerDelete}\n          type=\"Customer\"\n          onConfirm={handleConfirmDelete}\n          id={this.state.deleteCustomerId}\n        />\n        <CreateEditModal\n          mode={mode}\n          type=\"Customer\"\n          formElements={formElements}\n          open={this.state.createEditModal}\n          onClose={handleNewCustomer}\n          handleFormSubmit={handleFormSubmit}\n          error={this.state.error}\n        />\n\n        <SharedPagination\n          noOfItemsVisible={this.state.noOfItemsVisible}\n          list={customers}\n          handleActivePageChanged={this.handleActivePageChanged}\n          handleNoOfVisibleItemChange={this.handleNoOfVisibleItemChange}\n        />\n      </Fragment>\n    );\n  }\n\n  async fetchCustomers() {\n    await fetch(\"customers/getcustomer\")\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          customers: data,\n        })\n      );\n  }\n}\n\nexport default Customers;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router\";\nimport Layout from \"./components/Layout\";\nimport Stores from \"./components/Stores/Stores\";\nimport Sales from \"./components/Sales/Sales\";\nimport Products from \"./components/Products/Products\";\nimport Customers from \"./components/Customers/Customers\";\n\nimport \"./custom.css\";\n\nexport default class App extends Component {\n  static displayName = App.name;\n\n  render() {\n    const routes = [\n      { path: \"/\", component: Customers, exact: true },\n      { path: \"/stores\", component: Stores },\n      { path: \"/sales\", component: Sales },\n      { path: \"/products\", component: Products },\n    ];\n\n    return (\n      <Layout>\n        {routes.map((route) => (\n          <Route\n            key={route.path}\n            exact={route.exact}\n            path={route.path}\n            component={route.component}\n          />\n        ))}\n      </Layout>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'semantic-ui-css/semantic.min.css'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}